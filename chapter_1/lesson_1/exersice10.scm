; Следующая процедура вычисляет математическую функцию, называемую функцией Аккермана.
(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1)
              (A x (- y 1))))))

; Каковы значения следующих выражений?
(A 1 10)
; (A 1 10)
; (A (- 1 1) (A 1 (- 10 1)))
; (A (- 1 1) (A (- 1 1) (A 1 (- 9 1))))

(A 2 4)
(A 3 3)

; Рассмотрим следующие процедуры, где A — процедура, определенная выше:

(define (f n) (A 0 n))
; (* 2 n)

(define (g n) (A 1 n))
; A(1, n) =>
;   если n == 0 то 0
;   иначе A(0, A(1, n - 1))
;     => 2 * A(1, n - 1)
;     => 2 * 2 * A(1, n - 2)
;   => A(1, n) = 2^n

(define (h n) (A 2 n))
; A(2, n) =>
;   при n == 0 ==> 0
;   при n == 1 ==> 2
;   иначе A(1, A(2, n - 1))
;     => 2^A(2, n - 1)
;     => 2^2^A(2, n - 2)
;     

(define (k n) (* 5 n n))
